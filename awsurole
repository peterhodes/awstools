#!/usr/bin/bash


if [ $# -eq 0 ]
then
  echo "No role specified"
  echo "Usage:  $0 Role"
  exit
fi

# In certain circumstances it might be necessary to remove these environmental variables
#   before the assume-role is called. At this moment, this section is impacting the
#   temporary credentials from a get-session-token and that is why the following lines are
#   commented out.
# unset AWS_ACCESS_KEY_ID
# unset AWS_SECRET_ACCESS_KEY
# unset AWS_SESSION_TOKEN



export ROLE=$1
export ACCOUNTID=$(aws sts get-caller-identity --query "Account" --output text)
export SESSIONID="awssu-$$"


export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s EXPIRATION=%s ASSUMED_ARN=%s" \
$(aws sts assume-role \
--role-arn arn:aws:iam::$ACCOUNTID:role/$ROLE \
--role-session-name $SESSIONID \
--query "[Credentials.[AccessKeyId,SecretAccessKey,SessionToken,Expiration],AssumedRoleUser.[Arn]]" \
--output text))


if [ -z $ASSUMED_ARN ]
then
  echo "AssumeRole did not appear to work. Exiting"
  exit
fi

echo "Assumed role ARN : $ASSUMED_ARN"
echo "Expiration       : $EXPIRATION"
echo "Old shell PID is $$. Type echo \$\$ to get current shell PID".
echo "Creating new Shell. Use exit command when done."


# We may not be able to pass variables back to the calling shell - but - we can pass them to a new shell.
$SHELL





##  [root@fuji ~]# awswhoami
##  123456789012    arn:aws:iam::123456789012:user/peter    AIDA0HLSL3ADREM72LBA
##  [root@fuji ~]# awssu peterrole
##  Assumed role ARN : arn:aws:sts::123456789012:assumed-role/peterrole/awssu-6067
##  Expiration       : 2022-02-01T12:49:15+00:00
##  Old shell is PID is 6067. Type echo $$ to get current shell PID.
##  Creating new Shell. Use exit command when done.
##  [root@fuji ~]# awswhoami
##  123456789012    arn:aws:sts::123456789012:assumed-role/peterrole/awssu-6067     AROAQX5ZOCREBlYATUCRU:awssu-6067   
